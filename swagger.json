{
    "openapi": "3.0.0",
    "info": {
        "title": "Fitness API",
        "description": "An API for tracking fitness data",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Development server"
        },
        {
            "url": "https://cse341fitness.onrender.com",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api-docs/": {
            "get": {
                "description": "",
                "responses": {
                    "default": {
                        "description": ""
                    }
                }
            }
        },
        "/authentication/google": {
            "get": {
                "tags": ["Authentication"],
                "description": "Redirects the user to Google authentication page.   **Note:** You must manually click this link to authenticate with Google:   [Click here to log in with Google](http://localhost:3000/authentication/google)",
                "responses": {
                    "302": {
                        "description": "Redirects to Google OAuth login"
                    }
                },
                "security": ["opendid", "profile", "email"]
            }
        },
        "/authentication/google/callback": {
            "get": {
                "tags": ["Authentication"],
                "description": "Authenticate the user.",
                "responses": {
                    "200": {
                        "description": "User logged in"
                    },
                    "500": {
                        "description": "Error authenticating the user."
                    }
                },
                "security": ["opendid", "profile", "email"]
            }
        },
        "/authentication/logout": {
            "get": {
                "tags": ["Authentication"],
                "description": "Logout user.",
                "responses": {
                    "200": {
                        "description": "User logged out"
                    }
                },
                "security": ["opendid", "profile", "email"]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": ["Users"],
                "description": "Get user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "User ID to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "security": []
            },
            "put": {
                "tags": ["Users"],
                "description": "Update a userâ€™s details.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "User ID to update"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "object"
                                },
                                "properties": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "example": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                }
                                            }
                                        },
                                        "email": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "example": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            }
                                        },
                                        "workoutIds": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "array"
                                                },
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "string"
                                                        }
                                                    }
                                                },
                                                "example": {
                                                    "type": "array",
                                                    "example": [
                                                        "60b8d7e9ef9b3a8ed64f1234"
                                                    ],
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "favoriteExercise": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "example": {
                                                    "type": "string",
                                                    "example": "Dead lifts"
                                                }
                                            }
                                        },
                                        "achievements": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "array"
                                                },
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "string"
                                                        }
                                                    }
                                                },
                                                "example": {
                                                    "type": "array",
                                                    "example": [
                                                        "60b8d7e9ef9b3a8ed64f1111"
                                                    ],
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": {
                                    "type": "array",
                                    "example": ["name", "email"],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "example": "any"
                                    },
                                    "email": {
                                        "example": "any"
                                    },
                                    "workoutIds": {
                                        "example": "any"
                                    },
                                    "favoriteExercise": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "description": "Delete a user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "User ID to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Error deleting user."
                    }
                },
                "security": []
            }
        },
        "/users/{id}/{property}": {
            "get": {
                "tags": ["Users"],
                "description": "Fetch a specific property of a user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "User ID"
                    },
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Property name (e.g., name, email, workoutIds)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User property retrieved."
                    },
                    "400": {
                        "description": "Invalid property."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": []
            },
            "put": {
                "tags": ["Users"],
                "description": "Update a single property of a user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "User ID"
                    },
                    {
                        "name": "property",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Property name (e.g., email, favoriteExercise)"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "object"
                                },
                                "properties": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "example": {
                                                    "type": "string",
                                                    "example": "johndoe@gmail.com"
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": {
                                    "type": "array",
                                    "example": ["value"],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User property updated."
                    },
                    "400": {
                        "description": "Invalid property."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "example": "any"
                                    },
                                    "email": {
                                        "example": "any"
                                    },
                                    "workoutIds": {
                                        "example": "any"
                                    },
                                    "favoriteExercise": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "tags": ["Users"],
                "description": "Retrieve all users.",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": []
            }
        },
        "/workouts/": {
            "post": {
                "tags": ["Workouts"],
                "description": "Create a new workout",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "object"
                                },
                                "properties": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Type of the workout"
                                                }
                                            }
                                        },
                                        "duration": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "number"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Duration of the workout in minutes"
                                                }
                                            }
                                        },
                                        "caloriesBurned": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "number"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Calories burned during the workout"
                                                }
                                            }
                                        },
                                        "exerciseIds": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "array"
                                                },
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "string"
                                                        }
                                                    }
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Array of exercise IDs associated with the workout"
                                                }
                                            }
                                        },
                                        "timestamp": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "example": "date-time"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Timestamp of the workout"
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": {
                                    "type": "array",
                                    "example": [
                                        "type",
                                        "duration",
                                        "caloriesBurned",
                                        "timestamp"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Workout created successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error creating workout."
                    }
                },
                "security": ["opendid", "profile", "email"]
            },
            "get": {
                "tags": ["Workouts"],
                "description": "Retrieve all workouts",
                "responses": {
                    "200": {
                        "description": "Workouts retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error retrieving workouts."
                    }
                },
                "security": []
            }
        },
        "/workouts/{id}": {
            "get": {
                "tags": ["Workouts"],
                "description": "Retrieve a workout by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the workout"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workout retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Workout not found."
                    },
                    "500": {
                        "description": "Error retrieving workout."
                    }
                },
                "security": []
            },
            "put": {
                "tags": ["Workouts"],
                "description": "Update an existing workout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the workout"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "object"
                                },
                                "properties": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Type of the workout"
                                                }
                                            }
                                        },
                                        "duration": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "number"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Duration of the workout in minutes"
                                                }
                                            }
                                        },
                                        "caloriesBurned": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "number"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Calories burned during the workout"
                                                }
                                            }
                                        },
                                        "exerciseIds": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "array"
                                                },
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "string"
                                                        }
                                                    }
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Array of exercise IDs associated with the workout"
                                                }
                                            }
                                        },
                                        "timestamp": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "example": "date-time"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Timestamp of the workout"
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": {
                                    "type": "array",
                                    "example": [
                                        "type",
                                        "duration",
                                        "caloriesBurned",
                                        "timestamp"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workout updated successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Workout not found."
                    },
                    "500": {
                        "description": "Error updating workout."
                    }
                },
                "security": ["opendid", "profile", "email"]
            },
            "delete": {
                "tags": ["Workouts"],
                "description": "Delete a workout by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the workout"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workout deleted successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Workout not found."
                    },
                    "500": {
                        "description": "Error deleting workout."
                    }
                },
                "security": ["opendid", "profile", "email"]
            }
        },
        "/workouts/user/{id}": {
            "get": {
                "tags": ["Workouts"],
                "description": "Retrieve workouts by user ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workouts retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No workouts found for the given user."
                    },
                    "500": {
                        "description": "Error retrieving workouts."
                    }
                },
                "security": ["opendid", "profile", "email"]
            }
        },
        "/exercises/": {
            "post": {
                "tags": ["Exercises"],
                "description": "Create a new exercise",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "object"
                                },
                                "properties": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Name of the exercise"
                                                }
                                            }
                                        },
                                        "description": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Description of the exercise"
                                                }
                                            }
                                        },
                                        "duration": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "number"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Duration of the exercise in minutes"
                                                }
                                            }
                                        },
                                        "intensity": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Intensity level of the exercise"
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": {
                                    "type": "array",
                                    "example": [
                                        "name",
                                        "description",
                                        "duration",
                                        "intensity"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Exercise created successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error creating exercise."
                    }
                },
                "security": []
            },
            "get": {
                "tags": ["Exercises"],
                "description": "Retrieve all exercises",
                "responses": {
                    "200": {
                        "description": "Exercises retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error retrieving exercises."
                    }
                },
                "security": []
            }
        },
        "/exercises/{id}": {
            "get": {
                "tags": ["Exercises"],
                "description": "Retrieve an exercise by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the exercise"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exercise retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Exercise not found."
                    },
                    "500": {
                        "description": "Error retrieving exercise."
                    }
                },
                "security": []
            },
            "put": {
                "tags": ["Exercises"],
                "description": "Update an exercise by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the exercise"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "object"
                                },
                                "properties": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Name of the exercise"
                                                }
                                            }
                                        },
                                        "description": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Description of the exercise"
                                                }
                                            }
                                        },
                                        "duration": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "number"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Duration of the exercise in minutes"
                                                }
                                            }
                                        },
                                        "intensity": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Intensity level of the exercise"
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": {
                                    "type": "array",
                                    "example": [
                                        "name",
                                        "description",
                                        "duration",
                                        "intensity"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exercise updated successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Exercise not found."
                    },
                    "500": {
                        "description": "Error updating exercise."
                    }
                },
                "security": []
            },
            "delete": {
                "tags": ["Exercises"],
                "description": "Delete an exercise by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the exercise"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exercise deleted successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Exercise not found."
                    },
                    "500": {
                        "description": "Error deleting exercise."
                    }
                },
                "security": []
            }
        },
        "/health-metrics/": {
            "get": {
                "tags": ["Health Metrics"],
                "description": "Get all health metrics.",
                "responses": {
                    "200": {
                        "description": "Health metrics retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error getting health metrics."
                    }
                },
                "security": []
            },
            "post": {
                "tags": ["Health Metrics"],
                "description": "Create a new health metric.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Health metric data.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userId": {
                                    "type": "string",
                                    "example": "string"
                                },
                                "healthMetric": {
                                    "type": "string",
                                    "example": "string"
                                },
                                "value": {
                                    "type": "string",
                                    "example": "number"
                                },
                                "unit": {
                                    "type": "string",
                                    "example": "string"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "example": "date"
                                }
                            },
                            "required": [
                                "userId",
                                "healthMetric",
                                "value",
                                "unit",
                                "timestamp"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Health metric created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthMetric"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthMetric"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error creating health metric."
                    }
                },
                "security": []
            }
        },
        "/health-metrics/{id}": {
            "get": {
                "tags": ["Health Metrics"],
                "description": "Get health metric by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health metric retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Health metric not found."
                    },
                    "500": {
                        "description": "Error retrieving health metric."
                    }
                },
                "security": []
            },
            "put": {
                "tags": ["Health Metrics"],
                "description": "Update a health metric by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updated health metric data.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userId": {
                                    "type": "string",
                                    "example": "string"
                                },
                                "healthMetric": {
                                    "type": "string",
                                    "example": "string"
                                },
                                "value": {
                                    "type": "string",
                                    "example": "number"
                                },
                                "unit": {
                                    "type": "string",
                                    "example": "string"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "example": "date"
                                }
                            },
                            "required": [
                                "userId",
                                "healthMetric",
                                "value",
                                "unit",
                                "timestamp"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health metric updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthMetric"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthMetric"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Health metric not found."
                    },
                    "500": {
                        "description": "Error updating health metric."
                    }
                },
                "security": []
            },
            "delete": {
                "tags": ["Health Metrics"],
                "description": "Delete a health metric by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health metric deleted successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Health metric not found."
                    },
                    "500": {
                        "description": "Error deleting health metric."
                    }
                },
                "security": []
            }
        },
        "/health-metrics/user/{userId}": {
            "get": {
                "tags": ["Health Metrics"],
                "description": "Get health metrics by user ID.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health metrics retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error retrieving health metrics."
                    }
                },
                "security": []
            }
        },
        "/achievements/": {
            "get": {
                "tags": ["Achievements"],
                "description": "Retrieve all achievements",
                "responses": {
                    "200": {
                        "description": "Achievements retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error retrieving achievements."
                    }
                },
                "security": []
            },
            "post": {
                "tags": ["Achievements"],
                "description": "Create a new achievement",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "example": "Run 5 miles"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Run 5 miles in a week"
                                },
                                "progressGoal": {
                                    "type": "number",
                                    "example": 5
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Achievement created successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error creating achievement."
                    }
                },
                "security": []
            }
        },
        "/achievements/{id}": {
            "get": {
                "tags": ["Achievements"],
                "description": "Retrieve an achievement by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the achievement"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Achievement retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Achievement not found."
                    },
                    "500": {
                        "description": "Error retrieving achievement."
                    }
                },
                "security": []
            },
            "delete": {
                "tags": ["Achievements"],
                "description": "Delete an achievement by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the achievement"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Achievement deleted successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Achievement not found."
                    },
                    "500": {
                        "description": "Error deleting achievement."
                    }
                },
                "security": []
            },
            "put": {
                "tags": ["Achievements"],
                "description": "Update an existing achievement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the achievement"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "example": "Run 5 miles"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Run 5 miles in a week"
                                },
                                "progressGoal": {
                                    "type": "number",
                                    "example": 5
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Achievement updated successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Achievement not found."
                    },
                    "500": {
                        "description": "Error updating achievement."
                    }
                },
                "security": []
            }
        },
        "/achievements/user/{userId}": {
            "get": {
                "tags": ["Achievements"],
                "description": "Retrieve achievements for a specific user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User achievements retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No achievements found for the given user."
                    },
                    "500": {
                        "description": "Error retrieving user achievements."
                    }
                },
                "security": []
            },
            "post": {
                "tags": ["Achievements"],
                "description": "Create a new user achievement",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the user"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "achievementId": {
                                    "type": "string",
                                    "example": "60d5f484f1c2a8b8b8b8b8b8"
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Run 5 miles"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Run 5 miles in a week"
                                },
                                "progressGoal": {
                                    "type": "number",
                                    "example": 5
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User achievement created successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Achievement not found."
                    },
                    "500": {
                        "description": "Error creating user achievement."
                    }
                },
                "security": []
            }
        },
        "/user-health-metrics/all": {
            "get": {
                "tags": ["User Health Metrics"],
                "description": "Get all health metrics for all users (Admin route).",
                "responses": {
                    "200": {
                        "description": "All health metrics retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No health records found."
                    },
                    "500": {
                        "description": "Error fetching all user health metrics."
                    }
                },
                "security": []
            }
        },
        "/user-health-metrics/{userId}": {
            "get": {
                "tags": ["User Health Metrics"],
                "description": "Get all health metrics for a specific user.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health metrics retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No health records found for the user."
                    },
                    "500": {
                        "description": "Error fetching user health metrics."
                    }
                },
                "security": []
            }
        },
        "/user-health-metrics/{userId}/latest": {
            "get": {
                "tags": ["User Health Metrics"],
                "description": "Get the latest health metric for a specific user.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest health metric retrieved successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No health records found for the user."
                    },
                    "500": {
                        "description": "Error fetching latest health metric."
                    }
                },
                "security": []
            }
        },
        "/user-health-metrics/": {
            "post": {
                "tags": ["User Health Metrics"],
                "description": "Add a new health metric for a specific user.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Health metric data for the user.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "object"
                                },
                                "properties": {
                                    "type": "object",
                                    "properties": {
                                        "userId": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "example": {
                                                    "type": "string",
                                                    "example": "67df521afc6481f5bf781ec2"
                                                }
                                            }
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "object"
                                                },
                                                "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                        "heartRate": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "integer"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 72
                                                                }
                                                            }
                                                        },
                                                        "bloodPressure": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "object"
                                                                },
                                                                "properties": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "systolic": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "example": "integer"
                                                                                },
                                                                                "example": {
                                                                                    "type": "number",
                                                                                    "example": 120
                                                                                }
                                                                            }
                                                                        },
                                                                        "diastolic": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "example": "integer"
                                                                                },
                                                                                "example": {
                                                                                    "type": "number",
                                                                                    "example": 80
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "bloodSugar": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "integer"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 95
                                                                }
                                                            }
                                                        },
                                                        "temperature": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "number"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 36.5
                                                                }
                                                            }
                                                        },
                                                        "steps": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "integer"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 5000
                                                                }
                                                            }
                                                        },
                                                        "caloriesBurned": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "integer"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 250
                                                                }
                                                            }
                                                        },
                                                        "sleepDuration": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "number"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 7.5
                                                                }
                                                            }
                                                        },
                                                        "weight": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "number"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 75.2
                                                                }
                                                            }
                                                        },
                                                        "hydration": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "number"
                                                                },
                                                                "example": {
                                                                    "type": "number",
                                                                    "example": 1.5
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "timestamp": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "string"
                                                },
                                                "example": {
                                                    "type": "string",
                                                    "example": "2025-03-22T08:00:00.000+00:00"
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": {
                                    "type": "array",
                                    "example": [
                                        "userId",
                                        "metrics",
                                        "timestamp"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Health metric added successfully."
                    },
                    "400": {
                        "description": "Invalid input data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Error adding health metric."
                    }
                },
                "security": []
            }
        },
        "/user-health-metrics/{id}": {
            "delete": {
                "tags": ["User Health Metrics"],
                "description": "Delete a health metric for a specific user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health metric deleted successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Health metric not found."
                    },
                    "500": {
                        "description": "Error deleting health metric."
                    }
                },
                "security": []
            }
        }
    },
    "components": {
        "securitySchemes": {
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth",
                        "tokenUrl": "https://oauth2.googleapis.com/token",
                        "scopes": {
                            "openid": "OpenID authentication",
                            "profile": "Profile information",
                            "email": "Email information"
                        }
                    }
                }
            },
            "SessionAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "connect.sid"
            }
        }
    },
    "security": [
        {
            "oauth2": ["opendid", "profile", "email"]
        },
        {
            "SessionAuth": []
        }
    ]
}
